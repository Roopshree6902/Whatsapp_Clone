{"version":3,"sources":["axios.js","Chat.js","SidebarChat.js","slidebar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Chat","messages","useState","input","setInput","sendMessage","event","a","preventDefault","post","message","name","timestamp","received","className","Avatar","IconButton","SearchOutlined","AttachFile","MoreVert","map","value","onChange","e","target","placeholder","type","onClick","SlidebarChat","Slidebar","src","App","setMessages","useEffect","get","then","response","data","channel","Pusher","cluster","subscribe","bind","newMessage","unbind_all","unsubscribe","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c13cb033.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance=axios.create({\r\n    baseURL:\"http://localhost:3000\"\r\n});\r\n\r\nexport default instance;\r\n","import { IconButton,Avatar } from \"@material-ui/core\";\r\nimport { AttachFile, MoreVert,  SearchOutlined } from \"@material-ui/icons\";\r\nimport  InsertEmoticonIcon  from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport React, { useState } from \"react\";\r\nimport axios from \"./axios\";\r\n\r\nimport \"./Chat.css\";\r\n\r\nfunction Chat({messages}){\r\n\r\n    const [input, setInput]=useState(\"\");\r\n\r\n    const sendMessage= async(event)=>{\r\n        event.preventDefault();\r\n\r\n        await axios.post(\"/messages/new\",{\r\n            message:input,\r\n            name:\"Roop\",\r\n            timestamp:\"just Now\",\r\n            received:false\r\n\r\n\r\n        });\r\n        setInput(\"\");\r\n    };\r\n    return <div className=\"chat\">\r\n        <div className=\"chatHeader\">\r\n            <Avatar />\r\n            <div className=\"chatHeader_info\">\r\n                <h3>Room Name</h3>\r\n                <p>last seen at...</p>\r\n            </div>\r\n            <div className=\"chatHeaderRight\">\r\n            <IconButton>\r\n            <SearchOutlined />\r\n            </IconButton>\r\n            <IconButton>\r\n            <AttachFile/>\r\n            </IconButton>\r\n            <IconButton>\r\n            <MoreVert />\r\n            </IconButton>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"chatBody\">\r\n            {messages.map(message =>(\r\n                <p className={`chat_message ${!message.received && \"chat_receiver\"}`}>\r\n                <span className=\"chat_name\">{message.name}</span>\r\n                {message.message}\r\n                <span className=\"chat_timestamp\">\r\n                    {message.timestamp}\r\n                </span>\r\n            </p>\r\n\r\n            ))}\r\n            \r\n\r\n            \r\n        </div>\r\n\r\n        <div className=\"chat_footer\">\r\n            <InsertEmoticonIcon />\r\n            <form>\r\n                <input value={input} onChange={e=>setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\"/>\r\n                <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n            </form>\r\n            <MicIcon />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Chat;","import { Avatar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./SlidebarChat.css\";\r\n\r\nfunction SlidebarChat(){\r\n    return <div className=\"SlidebarChat\">\r\n        <Avatar />\r\n        <div className=\"SlidebarChat_info\">\r\n            <h4>\r\n                Room Name\r\n            </h4>\r\n            <p>\r\n                This is the last message.\r\n            </p>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default SlidebarChat;","import React from \"react\";\r\nimport \"./Slidebar.css\" ;\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {SearchOutlined} from '@material-ui/icons';\r\nimport SlidebarChat  from \"./SidebarChat\";\r\nfunction Slidebar(){\r\nreturn <div className=\"sidebar\">\r\n        \r\n    <div className=\"slidebar_header\">\r\n        <Avatar  src=\"https://avatars.githubusercontent.com/u/70578434?s=400&u=b3ed6f575be39e75d8f51ad3460dd9ed71dd5d21&v=4\" />\r\n\r\n        <div className=\"slidebar_headerRight\">\r\n            <IconButton>\r\n            <DonutLargeIcon />\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n            <ChatIcon />\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n            <MoreVertIcon />\r\n            </IconButton>\r\n        </div>\r\n           \r\n    </div>\r\n\r\n    <div className=\"slidebar_search\">\r\n        <div className=\"slidebar_searchContainer\">\r\n            <SearchOutlined />\r\n            <input placeholder=\"Search or Start new chat\" type=\"text\" />\r\n            \r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n    <div className=\"slidebar_chats\">\r\n        <SlidebarChat />\r\n        <SlidebarChat />\r\n        <SlidebarChat />\r\n        <SlidebarChat />\r\n        <SlidebarChat />\r\n        <SlidebarChat />\r\n        <SlidebarChat />\r\n        <SlidebarChat />\r\n        \r\n        \r\n\r\n        \r\n    </div>\r\n        \r\n\r\n    \r\n\r\n</div>\r\n}\r\n\r\n\r\nexport default Slidebar;","\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Chat from './Chat';\nimport Slidebar from './slidebar';\nimport Pusher from 'pusher-js';\nimport axios from './axios';\n// import { func } from 'prop-types';\n\nfunction App() {\n\n  const [messages,setMessages]=useState([]);\n\n  useEffect(function(){\n    axios.get(\"/messages/sync\").then(response=>{\n      \n      setMessages(response.data);\n    });\n  },[]);\n\n  useEffect(function(){\n    const pusher = new Pusher('94f615f50aafa92d52eb', {\n      cluster: 'eu'\n    });\n\n    const channel = pusher.subscribe('messages');\n    channel.bind('inserted', function(newMessage) {\n      // alert(JSON.stringify(newMessage));\n      setMessages([...messages,newMessage]);\n    });\n    return ()=>{\n      channel.unbind_all();\n      channel.unsubscribe();\n    };\n  },[messages]); \n\n  \n\n  console.log(messages);\n\n  return (\n    <div className=\"app\">\n    <div className=\"app_body\">\n    <Slidebar />\n      <Chat messages={messages}/>\n    </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}